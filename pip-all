#!/usr/bin/env python

import json
import sys
from subprocess import Popen, PIPE

def popen(args):

    if major < 3:
        process = Popen(
            args,
            stdout=PIPE, 
        )
    else:
        # either python3 is dumb, and assumes binary
        # or python2 is dumb and won't accept text=True
        # honestly, my money is python itself being dumb.
        # case in point, the : after the else. you need that.
        process = Popen(
            args,
            stdout=PIPE, 
            text=True,
        )
    return process

major=sys.version_info.major

pip_exe="pip"+str(major)
pip_outdated=[pip_exe, "list", "--local", "--outdated", "--format", "json"]

process = popen( pip_outdated )
(output, err) = process.communicate()
exit_code = process.wait()

pips=json.loads(output)

for if_pip in pips:
    if if_pip["name"] == "pip":
        pips.remove(if_pip)
        pips.insert(0, if_pip)

for pip in pips:
    print ("{}({}) ==> {}\n".format(pip["name"], pip["version"], pip["latest_version"]))
    pip_update = popen( [pip_exe, "install", "--upgrade" ,pip["name"]])
    (output, err) = pip_update.communicate()
    exit_code = pip_update.wait()
    print (output)

sys.exit(0)
